# Generated by Django 2.0.6 on 2018-06-26 16:24

import datetime
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xyz', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='MapItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('summary', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=1000)),
                ('info_sources', models.CharField(max_length=1000)),
                ('location_notes', models.CharField(max_length=50)),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='start date')),
                ('end_date', models.DateField(default=datetime.date.today, verbose_name='end date')),
                ('status', models.CharField(max_length=50)),
                ('location1', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
                ('location2', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('min_zoom', models.IntegerField()),
                ('max_zoom', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MappedMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('map_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpsite.MapItem')),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('credits', models.CharField(max_length=50)),
                ('date_created', models.DateField(default=datetime.date.today, verbose_name='date')),
                ('file_upload', models.FileField(upload_to='')),
                ('file_url', models.URLField()),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='start date')),
                ('end_date', models.DateField(default=datetime.date.today, verbose_name='end date')),
                ('media_sources', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='OverlayGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OverlayGroupLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpsite.Layer')),
                ('overlay_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpsite.OverlayGroup')),
            ],
        ),
        migrations.CreateModel(
            name='PartOfCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('area', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, default=None, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TagGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TimePeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='start date')),
                ('end_date', models.DateField(default=datetime.date.today, verbose_name='end date')),
            ],
        ),
        migrations.CreateModel(
            name='WebSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('upload_date', models.DateField(default=datetime.date.today, verbose_name='date')),
                ('season', models.IntegerField()),
                ('episode', models.IntegerField()),
                ('file_upload', models.FileField(upload_to='')),
                ('file_url', models.URLField()),
                ('credits', models.CharField(max_length=50)),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='start date')),
                ('end_date', models.DateField(default=datetime.date.today, verbose_name='end date')),
                ('map_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpsite.MapItem')),
                ('tags', models.ManyToManyField(to='dpsite.Tag')),
            ],
        ),
        migrations.AddField(
            model_name='tag',
            name='tag_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpsite.TagGroup'),
        ),
        migrations.AddField(
            model_name='overlaygroup',
            name='layer',
            field=models.ManyToManyField(through='dpsite.OverlayGroupLayer', to='dpsite.Layer'),
        ),
        migrations.AddField(
            model_name='media',
            name='tags',
            field=models.ManyToManyField(to='dpsite.Tag'),
        ),
        migrations.AddField(
            model_name='mappedmedia',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpsite.Media'),
        ),
        migrations.AddField(
            model_name='mapitem',
            name='media',
            field=models.ManyToManyField(through='dpsite.MappedMedia', to='dpsite.Media'),
        ),
        migrations.AddField(
            model_name='mapitem',
            name='overlay_group',
            field=models.ManyToManyField(to='dpsite.OverlayGroup'),
        ),
        migrations.AddField(
            model_name='mapitem',
            name='tags',
            field=models.ManyToManyField(to='dpsite.Tag'),
        ),
    ]
